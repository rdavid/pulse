#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# SPDX-FileCopyrightText: 2025 David Rabkin
# SPDX-License-Identifier: 0BSD
#
# The script uses local variables which are not POSIX but supported by most
# shells. See:
#  https://stackoverflow.com/q/18597697
# shellcheck disable=SC3043 # Uses local variables.
# shellcheck disable=SC1091,SC2034 # File not following, variable unused.
readonly \
	BASE_APP_VERSION=0.9.20250831 \
	CLIENT_HOST="${CLIENT_HOST:-client}" \
	CLIENT_PORT="${CLIENT_PORT:-9090}" \
	DBFILE="${DBFILE:-dat/db}" \
	LISTEN_PORT="${LISTEN_PORT:-8080}" \
	PERIOD=5 \
	TEST_MODE="${TEST_MODE:-false}"
. base.sh

# Initialize DB, clear file.
initdb() {
	iswritable "$DBFILE" || die Check "$DBFILE".
	: >"$DBFILE"
}

# Kills the client process. Requires shared PID namespace; see
# podman-compose.yml for setup.
killc() {
	local msg
	log Sending DIE signal to "$CLIENT_HOST":"$CLIENT_PORT".
	msg="$(printf die\\n | nc 2>&1 "$CLIENT_HOST" "$CLIENT_PORT")" ||
		loge "$msg"
}

# Listens messages from client.
listenc() {
	local cnt=0 lne
	while :; do
		nc -l -p "$LISTEN_PORT" | {
			IFS= read -r lne
			[ -n "$lne" ] && storedb "$lne"
		}
		cnt=$((cnt + 1))
		log Stored "$cnt" times.
		[ "$TEST_MODE" = true ] && cya Terminated in test mode.

		# Triggers client killing every PERIOD counts.
		[ $((cnt % PERIOD)) -eq 0 ] && killc
		sleep 1
	done
}

# Validates and listens in a loop.
main() {
	validate_cmd awk nc
	initdb
	log "$(whoami)" is listening on "$LISTEN_PORT".
	listenc
}

# Keeps the first argument in DB.
storedb() {
	printf %s\ %s\\n "$(timestamp)" "$1" >>"$DBFILE"
}

# Starting point.
main "$@"
